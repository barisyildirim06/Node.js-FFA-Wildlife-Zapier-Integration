const strikeReportParams = (bundle) => {
    return {
        IncidentDate: bundle.inputData.IncidentDate,
        IncidentTime: bundle.inputData.IncidentTime,
        AirportId: bundle.inputData.AirportId,
        AirportName: bundle.inputData.AirportName,
        OperatorId: bundle.inputData.OperatorId,
        OperatorName: bundle.inputData.OperatorName,
        EffectOtherText: bundle.inputData.EffectOtherText,
        DamagePartOther: bundle.inputData.DamagePartOther,
        Ingested: bundle.inputData.Ingested,
        Bird_Other_Wildlife_Species: bundle.inputData.Bird_Other_Wildlife_Species,
        Wildlife_Size_ID: bundle.inputData.Wildlife_Size_ID,
        Number_Seen_Wildlife_Count_ID: bundle.inputData.Number_Seen_Wildlife_Count_ID,
        Number_Struck_Wildlife_Count_ID: bundle.inputData.Number_Struck_Wildlife_Count_ID,
        SkyConditionId: bundle.inputData.SkyConditionId,
        PhaseOfFlightId: bundle.inputData.PhaseOfFlightId,
        BirdBandNumber: bundle.inputData.BirdBandNumber,
        Distance: bundle.inputData.Distance,
        STR_RAD: bundle.inputData.STR_RAD,
        DAM_RAD: bundle.inputData.DAM_RAD,
        STR_WINDSHLD: bundle.inputData.STR_WINDSHLD,
        DAM_WINDSHLD: bundle.inputData.DAM_WINDSHLD,
        STR_NOSE: bundle.inputData.STR_NOSE,
        DAM_NOSE: bundle.inputData.DAM_NOSE,
        STR_ENG1: bundle.inputData.STR_ENG1,
        DAM_ENG1: bundle.inputData.DAM_ENG1,
        ING_ENG1: bundle.inputData.ING_ENG1,
        STR_ENG2: bundle.inputData.STR_ENG2,
        DAM_ENG2: bundle.inputData.DAM_ENG2,
        ING_ENG2: bundle.inputData.ING_ENG2,
        STR_ENG3: bundle.inputData.STR_ENG3,
        DAM_ENG3: bundle.inputData.DAM_ENG3,
        ING_ENG3: bundle.inputData.ING_ENG3,
        STR_ENG4: bundle.inputData.STR_ENG4,
        DAM_ENG4: bundle.inputData.DAM_ENG4,
        ING_ENG4: bundle.inputData.ING_ENG4,
        STR_PROP: bundle.inputData.STR_PROP,
        DAM_PROP: bundle.inputData.DAM_PROP,
        STR_WING_ROT: bundle.inputData.STR_WING_ROT,
        DAM_WING_ROT: bundle.inputData.DAM_WING_ROT,
        STR_FUSE: bundle.inputData.STR_FUSE,
        DAM_FUSE: bundle.inputData.DAM_FUSE,
        STR_LG: bundle.inputData.STR_LG,
        DAM_LG: bundle.inputData.DAM_LG,
        STR_TAIL: bundle.inputData.STR_TAIL,
        DAM_TAIL: bundle.inputData.DAM_TAIL,
        STR_LGTHS: bundle.inputData.STR_LGTHS,
        DAM_LGTHS: bundle.inputData.DAM_LGTHS,
        STR_OTHER: bundle.inputData.STR_OTHER,
        DAM_OTHER: bundle.inputData.DAM_OTHER,
        AircraftId: bundle.inputData.AircraftId,
        AircraftName: bundle.inputData.AircraftName,
        Engine: bundle.inputData.Engine,
        Time_of_Day_ID: bundle.inputData.Time_of_Day_ID,
        AOS: bundle.inputData.AOS,
        Est_Cost_Repair_Replace: bundle.inputData.Est_Cost_Repair_Replace,
        Other_Costs: bundle.inputData.Other_Costs,
        Loc_From_Airport: bundle.inputData.Loc_From_Airport,
        Registration: bundle.inputData.Registration,
        Flight_Number: bundle.inputData.Flight_Number,
        Height: bundle.inputData.Height,
        Speed: bundle.inputData.Speed,
        Runway: bundle.inputData.Runway,
        Wildlife_Damage_Remarks: bundle.inputData.Wildlife_Damage_Remarks,
        Pilot_WarnedStatusID: bundle.inputData.Pilot_WarnedStatusID,
        Wildlife_Remains_Collected: bundle.inputData.Wildlife_Remains_Collected,
        Wildlife_Remains_Sent_To_Smith: bundle.inputData.Wildlife_Remains_Sent_To_Smith,
        ReportedBy: bundle.inputData.ReportedBy,
        ReporterTitle: bundle.inputData.ReporterTitle,
        ReporterPhone: bundle.inputData.ReporterPhone,
        ReporterEmail: bundle.inputData.ReporterEmail,
        RevisedByComment: bundle.inputData.RevisedByComment,
        StrikeReportNum: bundle.inputData.StrikeReportNum,
        Status: bundle.inputData.Status,
        Revision: bundle.inputData.Revision,
    }
}

const strikeReportInputFields = [
    {
        key: 'IncidentDate',
        label: 'IncidentDate',
        type: 'string',
        required: true
    },
    {
        key: 'IncidentTime',
        label: 'IncidentTime',
        type: 'string',
    },
    {
        key: 'AirportId',
        label: 'AirportId',
        type: 'integer',
    },
    {
        key: 'AirportName',
        label: 'AirportName',
        type: 'string',
    },
    {
        key: 'OperatorId',
        label: 'OperatorId',
        type: 'integer',
    },
    {
        key: 'OperatorName',
        label: 'OperatorName',
        type: 'string',
    },
    {
        key: 'EffectOtherText',
        label: 'EffectOtherText',
        type: 'string',
    },
    {
        key: 'DamagePartOther',
        label: 'DamagePartOther',
        type: 'string',
    },
    {
        key: 'Ingested',
        label: 'Ingested',
        type: 'boolean',
    },
    {
        key: 'Bird_Other_Wildlife_Species',
        label: 'Bird_Other_Wildlife_Species',
        type: 'string',
    },
    {
        key: 'Wildlife_Size_ID',
        label: 'Wildlife_Size_ID',
        type: 'integer',
    },
    {
        key: 'Number_Seen_Wildlife_Count_ID',
        label: 'Number_Seen_Wildlife_Count_ID',
        type: 'integer',
    },
    {
        key: 'SkyConditionId',
        label: 'SkyConditionId',
        type: 'integer',
    },
    {
        key: 'PhaseOfFlightId',
        label: 'PhaseOfFlightId',
        type: 'integer',
    },
    {
        key: 'BirdBandNumber',
        label: 'BirdBandNumber',
        type: 'string',
    },
    {
        key: 'Distance',
        label: 'Distance',
        type: 'integer',
    },
    {
        key: 'STR_RAD',
        label: 'STR_RAD',
        type: 'boolean',
    },
    {
        key: 'DAM_RAD',
        label: 'DAM_RAD',
        type: 'boolean',
    },
    {
        key: 'STR_WINDSHLD',
        label: 'STR_WINDSHLD',
        type: 'boolean',
    },
    {
        key: 'DAM_WINDSHLD',
        label: 'DAM_WINDSHLD',
        type: 'boolean',
    },
    {
        key: 'STR_NOSE',
        label: 'STR_NOSE',
        type: 'boolean',
    },
    {
        key: 'DAM_NOSE',
        label: 'DAM_NOSE',
        type: 'boolean',
    },
    {
        key: 'STR_ENG1',
        label: 'STR_ENG1',
        type: 'boolean',
    },
    {
        key: 'DAM_ENG1',
        label: 'DAM_ENG1',
        type: 'boolean',
    },
    {
        key: 'ING_ENG1',
        label: 'ING_ENG1',
        type: 'boolean',
    },
    {
        key: 'STR_ENG2',
        label: 'STR_ENG2',
        type: 'boolean',
    },
    {
        key: 'DAM_ENG2',
        label: 'DAM_ENG2',
        type: 'boolean',
    },
    {
        key: 'ING_ENG2',
        label: 'ING_ENG2',
        type: 'boolean',
    },
    {
        key: 'STR_ENG3',
        label: 'STR_ENG3',
        type: 'boolean',
    },
    {
        key: 'DAM_ENG3',
        label: 'DAM_ENG3',
        type: 'boolean',
    },
    {
        key: 'ING_ENG3',
        label: 'ING_ENG3',
        type: 'boolean',
    },
    {
        key: 'STR_ENG4',
        label: 'STR_ENG4',
        type: 'boolean',
    },
    {
        key: 'DAM_ENG4',
        label: 'DAM_ENG4',
        type: 'boolean',
    },
    {
        key: 'ING_ENG4',
        label: 'ING_ENG4',
        type: 'boolean',
    },
    {
        key: 'STR_PROP',
        label: 'STR_PROP',
        type: 'boolean',
    },
    {
        key: 'DAM_PROP',
        label: 'DAM_PROP',
        type: 'boolean',
    },
    {
        key: 'STR_WING_ROT',
        label: 'STR_WING_ROT',
        type: 'boolean',
    },
    {
        key: 'DAM_WING_ROT',
        label: 'DAM_WING_ROT',
        type: 'boolean',
    },
    {
        key: 'STR_FUSE',
        label: 'STR_FUSE',
        type: 'boolean',
    },
    {
        key: 'DAM_FUSE',
        label: 'DAM_FUSE',
        type: 'boolean',
    },
    {
        key: 'STR_LG',
        label: 'STR_LG',
        type: 'boolean',
    },
    {
        key: 'DAM_LG',
        label: 'DAM_LG',
        type: 'boolean',
    },
    {
        key: 'STR_TAIL',
        label: 'STR_TAIL',
        type: 'boolean',
    },
    {
        key: 'DAM_TAIL',
        label: 'DAM_TAIL',
        type: 'boolean',
    },
    {
        key: 'STR_LGTHS',
        label: 'STR_LGTHS',
        type: 'boolean',
    },
    {
        key: 'DAM_LGTHS',
        label: 'DAM_LGTHS',
        type: 'boolean',
    },
    {
        key: 'STR_OTHER',
        label: 'STR_OTHER',
        type: 'boolean',
    },
    {
        key: 'DAM_OTHER',
        label: 'DAM_OTHER',
        type: 'boolean',
    },
    {
        key: 'AircraftId',
        label: 'AircraftId',
        type: 'integer',
    },
    {
        key: 'AircraftName',
        label: 'AircraftName',
        type: 'string',
    },
    {
        key: 'Engine',
        label: 'Engine',
        type: 'string',
    },
    {
        key: 'Time_of_Day_ID',
        label: 'Time_of_Day_ID',
        type: 'integer',
    },
    {
        key: 'AOS',
        label: 'AOS',
        type: 'integer',
    },
    {
        key: 'Est_Cost_Repair_Replace',
        label: 'Est_Cost_Repair_Replace',
        type: 'integer',
    },
    {
        key: 'Other_Costs',
        label: 'Other_Costs',
        type: 'integer',
    },
    {
        key: 'Loc_From_Airport',
        label: 'Loc_From_Airport',
        type: 'string',
    },
    {
        key: 'Registration',
        label: 'Registration',
        type: 'string',
    },
    {
        key: 'Flight_Number',
        label: 'Flight_Number',
        type: 'string',
    },
    {
        key: 'Height',
        label: 'Height',
        type: 'string',
    },
    {
        key: 'Speed',
        label: 'Speed',
        type: 'string',
    },
    {
        key: 'Runway',
        label: 'Runway',
        type: 'string',
    },
    {
        key: 'Wildlife_Damage_Remarks',
        label: 'Wildlife_Damage_Remarks',
        type: 'string',
    },
    {
        key: 'Pilot_WarnedStatusID',
        label: 'Pilot_WarnedStatusID',
        type: 'integer',
    },
    {
        key: 'Wildlife_Remains_Collected',
        label: 'Wildlife_Remains_Collected',
        type: 'boolean',
    },
    {
        key: 'Wildlife_Remains_Sent_To_Smith',
        label: 'Wildlife_Remains_Sent_To_Smith',
        type: 'boolean',
    },
    {
        key: 'ReportedBy',
        label: 'ReportedBy',
        type: 'string',
    },
    {
        key: 'ReporterTitle',
        label: 'ReporterTitle',
        type: 'string',
    },
    {
        key: 'ReporterPhone',
        label: 'ReporterPhone',
        type: 'string',
    },
    {
        key: 'ReporterEmail',
        label: 'ReporterEmail',
        type: 'string',
    },
    {
        key: 'RevisedByComment',
        label: 'RevisedByComment',
        type: 'string',
    },
    {
        key: 'StrikeReportNum',
        label: 'StrikeReportNum',
        type: 'string',
    },
    {
        key: 'Status',
        label: 'Status',
        type: 'string',
    },
    {
        key: 'Revision',
        label: 'Revision',
        type: 'integer',
    },
]

module.exports = { strikeReportParams, strikeReportInputFields };